{"version":3,"sources":["components/Nav.js","pages/Login.js","firebase.js","components/ContactList.js","components/ModalWindow.js","pages/Contacts.js","pages/FavoriteContacts.js","App.js","index.js"],"names":["Nav","onLogout","className","exact","to","activeStyle","color","data-toggle","style","cursor","onClick","Login","onLogin","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","ContactList","contacts","setModalIsOpen","setIdForEdit","toggleFavorites","contact","a","collection","doc","id","update","favorite","toast","type","autoClose","console","log","deleteContact","delete","map","name","tel","email","Modal","setAppElement","ModalWindow","modalIsOpen","idForEdit","initialContactState","useState","setContact","addContact","set","updateContact","handleInputChange","e","target","value","getContactById","get","selectedContact","data","useEffect","isOpen","onRequestClose","overlay","backgroundColor","content","padding","onSubmit","preventDefault","telNumber","test","str","String","toLowerCase","placeholder","required","onChange","Contacts","setContacts","getContacts","onSnapshot","querySnapshot","allContacts","forEach","push","error","FavoriteContacts","favoriteContacts","setFavoriteContacts","el","filter","GoogleAuth","isLogin","setIsLogin","auth","onAuthStateChanged","user","signOut","path","component","provider","GoogleAuthProvider","signInWithPopup","ReactDOM","render","App","document","getElementById"],"mappings":"kMAgDeA,EA9CH,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACb,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAIA,UAAU,eAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CACEC,OAAK,EACLC,GAAG,IACHF,UAAU,WACVG,YAAa,CACXC,MAAO,WAETC,cAAY,MAPd,SAQE,8CAIJ,oBAAIL,UAAU,WAAd,SACE,cAAC,IAAD,CACEC,OAAK,EACLC,GAAG,aACHF,UAAU,WACVG,YAAa,CACXC,MAAO,WAETC,cAAY,MAPd,SAQE,+CAIJ,oBAAIL,UAAU,WAAd,SACE,qBACEA,UAAU,WACVM,MAAO,CAAEC,OAAQ,WACjBF,cAAY,MACZG,QAAST,EAJX,SAKE,oDCpBCU,EAjBD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OACE,qBAAKV,UAAU,gBAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAd,6BACA,wBAAQA,UAAU,4BAA4BQ,QAASE,EAAvD,yC,yCCMCC,G,MADFC,IAASC,cAXG,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,YACE,uEACFC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAIYC,aCmFNC,EA9FK,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACzCC,EAAe,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAEdjB,EACHkB,WAAW,YACXC,IAAIH,EAAQI,IACZC,OAHG,2BAGSL,GAHT,IAGkBM,UAAWN,EAAQM,YALvB,OAMpBC,YACGP,EAAQM,SAEL,iCADA,6BAEJ,CACEE,KAAM,UACNC,UAAW,OAZK,+CAgBpBC,QAAQC,IAAR,MAhBoB,wDAAH,sDAyBfC,EAAa,uCAAG,WAAOR,GAAP,SAAAH,EAAA,+EAEZjB,EAAGkB,WAAW,YAAYC,IAAIC,GAAIS,SAFtB,OAGlBN,YAAM,kBAAmB,CACvBC,KAAM,UACNC,UAAW,OALK,+CAQlBC,QAAQC,IAAR,MARkB,wDAAH,sDAYnB,OACE,qBAAKtC,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,mDAAf,UACE,oBAAIA,UAAU,uBAAd,sBACA,mBACEA,UAAU,8BACVM,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBAAMgB,GAAe,IAHhC,oBAQDD,EAASkB,KAAI,SAACd,GAAD,OACZ,qBAAK3B,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,gCACE,oBAAIA,UAAU,eAAd,SAA8B2B,EAAQe,OACtC,6BAAKf,EAAQgB,MACb,6BAAKhB,EAAQiB,WAGf,gCACE,mBACE5C,UACG2B,EAAQM,SAA8B,8BAAnB,iBAEtB3B,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBAAMkB,EAAgBC,IALjC,kBASA,mBACE3B,UAAU,iBACVM,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBArDAuB,EAqDwBJ,EAAQI,GApDzDP,GAAe,QACfC,EAAaM,GAFW,IAACA,GAkDX,kBAOA,mBACE/B,UAAU,iBACVM,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBAAM+B,EAAcZ,EAAQI,KAHvC,6BA1BwBJ,EAAQI,a,yBCnDlDc,IAAMC,cAAc,SAEpB,IAiKeC,EAjKK,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,YAAaxB,EAA8C,EAA9CA,eAAgByB,EAA8B,EAA9BA,UAAWxB,EAAmB,EAAnBA,aACvDyB,EAAsB,CAC1BR,KAAM,GACNC,IAAK,GACLC,MAAO,IAJuE,EAOlDO,mBAAS,eAAKD,IAPoC,mBAOzEvB,EAPyE,KAOhEyB,EAPgE,KAS1EC,EAAU,uCAAG,sBAAAzB,EAAA,+EAETjB,EACHkB,WAAW,YACXC,MACAwB,IAHG,2BAGM3B,GAHN,IAGeM,UAAU,KALhB,OAMfC,YAAM,gBAAiB,CACrBC,KAAM,UACNC,UAAW,OARE,+CAWfC,QAAQC,IAAR,MAXe,wDAAH,qDAeViB,EAAa,uCAAG,sBAAA3B,EAAA,+EAEZjB,EAAGkB,WAAW,YAAYC,IAAImB,GAAWjB,OAAOL,GAFpC,OAGlBO,YAAM,kBAAmB,CACvBC,KAAM,UACNC,UAAW,OAEbX,EAAa,IAPK,gDASlBY,QAAQC,IAAR,MATkB,yDAAH,qDAabkB,EAAoB,SAACC,GAAO,IAAD,EACPA,EAAEC,OAAlBhB,EADuB,EACvBA,KAAMiB,EADiB,EACjBA,MACdP,EAAW,2BAAKzB,GAAN,kBAAgBe,EAAOiB,MAoC7BC,EAAc,uCAAG,WAAO7B,GAAP,eAAAH,EAAA,sEACSjB,EAAGkB,WAAW,YAAYC,IAAIC,GAAI8B,MAD3C,OACfC,EADe,OAErBV,EAAW,eAAKU,EAAgBC,SAFX,2CAAH,sDAapB,OARAC,qBAAU,WACU,KAAdf,EACFG,EAAW,eAAKF,IAEhBU,EAAeX,KAEhB,CAACA,IAGF,cAAC,IAAD,CACEgB,OAAQjB,EACRkB,eAAgB,kBAAM1C,GAAe,IACrClB,MAAO,CACL6D,QAAS,CACPC,gBAAiB,WAEnBC,QAAS,CACPC,QAAS,EACTF,gBAAiB,YATvB,SAYE,qBAAKpE,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,uBAAMA,UAAU,iBAAiBuE,SApDtB,SAACd,GAGpB,OAFAA,EAAEe,iBANuBC,EAQF9C,EAAQgB,IAPpB,QACD+B,KAAKD,IAPME,EAoBFhD,EAAQiB,MAnBhB,wJACD8B,KAAKE,OAAOD,GAAKE,gBAyBb,KAAd5B,EAAmBI,IAAeE,IAElCH,EAAW,CAAEV,KAAM,GAAIC,IAAK,GAAIC,MAAO,GAAIX,UAAU,SACrDT,GAAe,IATNU,YAAM,gBAAiB,CAC5BC,KAAM,QACNC,UAAW,QATNF,YAAM,2BAA4B,CACvCC,KAAM,QACNC,UAAW,OAXS,IAACqC,EALJE,GA8Db,UACE,sBAAK3E,UAAU,yBAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,mBAAGA,UAAU,iBAAb,sBAEF,uBACEA,UAAU,eACVmC,KAAK,OACL2C,YAAY,OACZpC,KAAK,OACLiB,MAAOhC,EAAQe,KACfqC,UAAQ,EACRC,SAAUxB,OAId,sBAAKxD,UAAU,yBAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,mBAAGA,UAAU,iBAAb,qBAEF,uBACEA,UAAU,eACVmC,KAAK,OACL2C,YAAY,MACZpC,KAAK,MACLiB,MAAOhC,EAAQgB,IACfoC,UAAQ,EACRC,SAAUxB,OAId,sBAAKxD,UAAU,yBAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,mBAAGA,UAAU,iBAAb,qBAEF,uBACEA,UAAU,eACVmC,KAAK,OACL2C,YAAY,QACZpC,KAAK,QACLiB,MAAOhC,EAAQiB,MACfmC,UAAQ,EACRC,SAAUxB,OAId,wBAAQxD,UAAU,4BAAlB,SACiB,KAAdiD,EAAmB,SAAW,oBCjHhCgC,EAxCE,WAAO,IAAD,EACW9B,mBAAS,IADpB,mBACd5B,EADc,KACJ2D,EADI,OAEiB/B,oBAAS,GAF1B,mBAEdH,EAFc,KAEDxB,EAFC,OAGa2B,mBAAS,IAHtB,mBAGdF,EAHc,KAGHxB,EAHG,KAKf0D,EAAW,uCAAG,sBAAAvD,EAAA,sDAClB,IACEjB,EAAGkB,WAAW,YAAYuD,YAAW,SAACC,GACpC,IAAMC,EAAc,GACpBD,EAAcE,SAAQ,SAACzD,GACrBwD,EAAYE,KAAZ,2BAAsB1D,EAAIiC,QAA1B,IAAkChC,GAAID,EAAIC,SAE5CmD,EAAYI,MAEd,MAAOG,GACPpD,QAAQC,IAAImD,GAVI,2CAAH,qDAkBjB,OAJAzB,qBAAU,WACRmB,MACC,IAGD,qCACE,cAAC,EAAD,CACE5D,SAAUA,EACVC,eAAgBA,EAChBC,aAAcA,IAEhB,cAAC,EAAD,CACEuB,YAAaA,EACbxB,eAAgBA,EAChByB,UAAWA,EACXxB,aAAcA,QCDPiE,EAnCU,WAAO,IAAD,EACmBvC,mBAAS,IAD5B,mBACtBwC,EADsB,KACJC,EADI,KAGvBT,EAAW,uCAAG,sBAAAvD,EAAA,sDAClBjB,EAAGkB,WAAW,YAAYuD,YAAW,SAACC,GACpC,IAAMC,EAAc,GACpBD,EAAcE,SAAQ,SAACM,GACrBP,EAAYE,KAAKK,EAAG9B,WAEtB6B,EAAoBN,EAAYQ,QAAO,SAACnE,GAAD,OAAaA,EAAQM,gBAN5C,2CAAH,qDAcjB,OAJA+B,qBAAU,WACRmB,MACC,IAGD,qBAAKnF,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,uBAAd,uBACC2F,EAAiBlD,KAAI,SAACd,GAAD,OACpB,qBAAK3B,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,6BAAK2B,EAAQe,OACb,6BAAKf,EAAQgB,MACb,6BAAKhB,EAAQiB,YAJejB,EAAQI,a,QCyBnCgE,G,MAxCI,WAAO,IAAD,EACO5C,oBAAS,GADhB,mBAChB6C,EADgB,KACPC,EADO,KAqBvB,OARAjC,qBAAU,WACRpD,IAASsF,OAAOC,oBAAmB,SAACC,GAC9BA,GACFH,GAAW,QAGd,IAECD,EAEA,sBAAKhG,UAAU,gBAAf,UACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAKD,SAjBI,WACfa,IAASsF,OAAOG,UAChBJ,GAAW,MAgBL,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,IAAIrG,OAAK,EAACsG,UAAWtB,IACjC,cAAC,IAAD,CAAOqB,KAAK,aAAaC,UAAWb,UAIxC,cAAC,IAAD,OAIG,cAAC,EAAD,CAAOhF,QAjCA,WACd,IAAM8F,EAAW,IAAI5F,IAASsF,KAAKO,mBACnC7F,IAASsF,OAAOQ,gBAAgBF,Q,MCTpCG,IAASC,OAAO,cAACC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.167e6704.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\n\r\nconst Nav = ({ onLogout }) => {\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-md-12 p-2'>\r\n        <ul className='nav nav-tabs'>\r\n          <li className='nav-item'>\r\n            <NavLink\r\n              exact\r\n              to='/'\r\n              className='nav-link'\r\n              activeStyle={{\r\n                color: '#5CB85C',\r\n              }}\r\n              data-toggle='tab'>\r\n              <h5>Contacts</h5>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <NavLink\r\n              exact\r\n              to='/favorites'\r\n              className='nav-link'\r\n              activeStyle={{\r\n                color: '#5CB85C',\r\n              }}\r\n              data-toggle='tab'>\r\n              <h5>Favorites</h5>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className='nav-item'>\r\n            <div\r\n              className='nav-link'\r\n              style={{ cursor: 'pointer' }}\r\n              data-toggle='tab'\r\n              onClick={onLogout}>\r\n              <h5>Logout</h5>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  return (\r\n    <div className='container p-4'>\r\n      <div className='row d-flex justify-content-center'>\r\n        <div className='col-md-4'>\r\n          <div className='card card-body'>\r\n            <h2 className='mb-4 text-center'>Contact Manager</h2>\r\n            <button className='btn btn-success btn-block' onClick={onLogin}>\r\n              Login With Google\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAAnxLfqJM_oR9ZDU6psW5IEN9F6HbhVfw',\r\n  authDomain: 'g-login-196b7.firebaseapp.com',\r\n  databaseURL:\r\n    'https://g-login-196b7-default-rtdb.europe-west1.firebasedatabase.app',\r\n  projectId: 'g-login-196b7',\r\n  storageBucket: 'g-login-196b7.appspot.com',\r\n  messagingSenderId: '545200038742',\r\n  appId: '1:545200038742:web:c35af73fd150dd209eecf7',\r\n};\r\n\r\nconst fb = firebase.initializeApp(firebaseConfig);\r\nexport const db = fb.firestore();\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { db } from '../firebase';\r\n\r\nconst ContactList = ({ contacts, setModalIsOpen, setIdForEdit }) => {\r\n  const toggleFavorites = async (contact) => {\r\n    try {\r\n      await db\r\n        .collection('contacts')\r\n        .doc(contact.id)\r\n        .update({ ...contact, favorite: !contact.favorite });\r\n      toast(\r\n        !contact.favorite\r\n          ? 'Contact Added To Favorites'\r\n          : 'Contact Removed From Favorites',\r\n        {\r\n          type: 'success',\r\n          autoClose: 1500,\r\n        },\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onEditButtonClick = (id) => {\r\n    setModalIsOpen(true);\r\n    setIdForEdit(id);\r\n  };\r\n\r\n  const deleteContact = async (id) => {\r\n    try {\r\n      await db.collection('contacts').doc(id).delete();\r\n      toast('Contact Removed', {\r\n        type: 'success',\r\n        autoClose: 1500,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-md-12 p-2'>\r\n        <div className='d-flex justify-content-center align-items-center'>\r\n          <h3 className='text-center p-4 mb-0'>Contacts</h3>\r\n          <i\r\n            className='material-icons text-success'\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={() => setModalIsOpen(true)}>\r\n            add\r\n          </i>\r\n        </div>\r\n\r\n        {contacts.map((contact) => (\r\n          <div className='card mb-2' key={contact.id}>\r\n            <div className='card-body'>\r\n              <div className='d-flex justify-content-between'>\r\n                <div>\r\n                  <h5 className='text-success'>{contact.name}</h5>\r\n                  <h5>{contact.tel}</h5>\r\n                  <h5>{contact.email}</h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <i\r\n                    className={\r\n                      !contact.favorite ? 'material-icons' : 'material-icons text-success'\r\n                    }\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={() => toggleFavorites(contact)}>\r\n                    star\r\n                  </i>\r\n\r\n                  <i\r\n                    className='material-icons'\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={() => onEditButtonClick(contact.id)}>\r\n                    edit\r\n                  </i>\r\n\r\n                  <i\r\n                    className='material-icons'\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={() => deleteContact(contact.id)}>\r\n                    delete\r\n                  </i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { toast } from 'react-toastify';\r\nimport { db } from '../firebase';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ModalWindow = ({ modalIsOpen, setModalIsOpen, idForEdit, setIdForEdit }) => {\r\n  const initialContactState = {\r\n    name: '',\r\n    tel: '',\r\n    email: '',\r\n  };\r\n\r\n  const [contact, setContact] = useState({ ...initialContactState });\r\n\r\n  const addContact = async () => {\r\n    try {\r\n      await db\r\n        .collection('contacts')\r\n        .doc()\r\n        .set({ ...contact, favorite: false });\r\n      toast('Contact Added', {\r\n        type: 'success',\r\n        autoClose: 1500,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateContact = async () => {\r\n    try {\r\n      await db.collection('contacts').doc(idForEdit).update(contact);\r\n      toast('Contact Updated', {\r\n        type: 'success',\r\n        autoClose: 1500,\r\n      });\r\n      setIdForEdit('');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setContact({ ...contact, [name]: value });\r\n  };\r\n\r\n  const validateEmail = (str) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(str).toLowerCase());\r\n  };\r\n\r\n  const validateTelNumber = (telNumber) => {\r\n    const re = /^\\d+$/;\r\n    return re.test(telNumber);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateTelNumber(contact.tel)) {\r\n      return toast('Invalid Telephone Number', {\r\n        type: 'error',\r\n        autoClose: 1500,\r\n      });\r\n    }\r\n\r\n    if (!validateEmail(contact.email)) {\r\n      return toast('Invalid Email', {\r\n        type: 'error',\r\n        autoClose: 1500,\r\n      });\r\n    }\r\n\r\n    idForEdit === '' ? addContact() : updateContact();\r\n\r\n    setContact({ name: '', tel: '', email: '', favorite: false });\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const getContactById = async (id) => {\r\n    const selectedContact = await db.collection('contacts').doc(id).get();\r\n    setContact({ ...selectedContact.data() });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (idForEdit === '') {\r\n      setContact({ ...initialContactState });\r\n    } else {\r\n      getContactById(idForEdit);\r\n    }\r\n  }, [idForEdit]);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalIsOpen}\r\n      onRequestClose={() => setModalIsOpen(false)}\r\n      style={{\r\n        overlay: {\r\n          backgroundColor: '#32383E',\r\n        },\r\n        content: {\r\n          padding: 0,\r\n          backgroundColor: '#272B30',\r\n        },\r\n      }}>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-md-12 p-2'>\r\n            <form className='card card-body' onSubmit={handleSubmit}>\r\n              <div className='form-group input-group'>\r\n                <div className='input-group-text bg-light'>\r\n                  <i className='material-icons'>person</i>\r\n                </div>\r\n                <input\r\n                  className='form-control'\r\n                  type='text'\r\n                  placeholder='Name'\r\n                  name='name'\r\n                  value={contact.name}\r\n                  required\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group input-group'>\r\n                <div className='input-group-text bg-light'>\r\n                  <i className='material-icons'>phone</i>\r\n                </div>\r\n                <input\r\n                  className='form-control'\r\n                  type='text'\r\n                  placeholder='Tel'\r\n                  name='tel'\r\n                  value={contact.tel}\r\n                  required\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group input-group'>\r\n                <div className='input-group-text bg-light'>\r\n                  <i className='material-icons'>email</i>\r\n                </div>\r\n                <input\r\n                  className='form-control'\r\n                  type='text'\r\n                  placeholder='Email'\r\n                  name='email'\r\n                  value={contact.email}\r\n                  required\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n\r\n              <button className='btn btn-success btn-block'>\r\n                {idForEdit === '' ? 'Update' : 'Add'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ContactList from '../components/ContactList';\r\nimport ModalWindow from '../components/ModalWindow';\r\nimport { db } from '../firebase';\r\n\r\nconst Contacts = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [idForEdit, setIdForEdit] = useState('');\r\n\r\n  const getContacts = async () => {\r\n    try {\r\n      db.collection('contacts').onSnapshot((querySnapshot) => {\r\n        const allContacts = [];\r\n        querySnapshot.forEach((doc) => {\r\n          allContacts.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setContacts(allContacts);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ContactList\r\n        contacts={contacts}\r\n        setModalIsOpen={setModalIsOpen}\r\n        setIdForEdit={setIdForEdit}\r\n      />\r\n      <ModalWindow\r\n        modalIsOpen={modalIsOpen}\r\n        setModalIsOpen={setModalIsOpen}\r\n        idForEdit={idForEdit}\r\n        setIdForEdit={setIdForEdit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\n\r\nconst FavoriteContacts = () => {\r\n  const [favoriteContacts, setFavoriteContacts] = useState([]);\r\n\r\n  const getContacts = async () => {\r\n    db.collection('contacts').onSnapshot((querySnapshot) => {\r\n      const allContacts = [];\r\n      querySnapshot.forEach((el) => {\r\n        allContacts.push(el.data());\r\n      });\r\n      setFavoriteContacts(allContacts.filter((contact) => contact.favorite));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-md-12 p-2'>\r\n        <h3 className='text-center p-4 mb-0'>Favorites</h3>\r\n        {favoriteContacts.map((contact) => (\r\n          <div className='card mb-2' key={contact.id}>\r\n            <div className='card-body'>\r\n              <h5>{contact.name}</h5>\r\n              <h5>{contact.tel}</h5>\r\n              <h5>{contact.email}</h5>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteContacts;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Nav from './components/Nav';\r\nimport Login from './pages/Login';\r\nimport Contacts from './pages/Contacts';\r\nimport FavoriteContacts from './pages/FavoriteContacts';\r\nimport firebase from 'firebase';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst GoogleAuth = () => {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  const onLogin = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\n  const onLogout = () => {\r\n    firebase.auth().signOut();\r\n    setIsLogin(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setIsLogin(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (isLogin) {\r\n    return (\r\n      <div className='container p-4'>\r\n        <Router>\r\n          <Nav onLogout={onLogout} />\r\n          <Switch>\r\n            <Route path='/' exact component={Contacts} />\r\n            <Route path='/favorites' component={FavoriteContacts} />\r\n          </Switch>\r\n        </Router>\r\n\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Login onLogin={onLogin} />;\r\n  }\r\n};\r\n\r\nexport default GoogleAuth;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './firebase';\r\nimport 'bootswatch/dist/slate/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}